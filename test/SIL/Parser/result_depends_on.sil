// RUN: %target-sil-opt %s -enable-experimental-feature NonescapableTypes | %FileCheck %s
// REQUIRES: asserts

sil_stage raw

import Builtin

class Klass { }

class MethodModifiers {
  _resultDependsOnSelf func getDependentResult() -> Builtin.NativeObject
}

func foo(_ x: _resultDependsOn Klass) -> Builtin.NativeObject

// CHECK-LABEL: sil hidden [ossa] [_resultDependsOnSelf] @getDependentResult : 
// CHECK-LABEL: } // end sil function 'getDependentResult'
sil hidden [ossa] [_resultDependsOnSelf] @getDependentResult : $@convention(method) (@guaranteed MethodModifiers) -> @owned Builtin.NativeObject {
bb0(%0 : @guaranteed $MethodModifiers):
  %2 = copy_value %0 : $MethodModifiers           
  %3 = unchecked_ref_cast %2 : $MethodModifiers to $Builtin.NativeObject 
  return %3 : $Builtin.NativeObject               
} 

// CHECK-LABEL: sil hidden [ossa] @foo : 
// CHECK: bb0(%0 : @_resultDependsOn @guaranteed $Klass):
// CHECK-LABEL: } // end sil function 'foo'
sil hidden [ossa] @foo : $@convention(thin) (@guaranteed Klass) -> @owned Builtin.NativeObject {
bb0(%0 : @_resultDependsOn @guaranteed $Klass):
  %2 = copy_value %0 : $Klass                     
  %3 = unchecked_ref_cast %2 : $Klass to $Builtin.NativeObject 
  return %3 : $Builtin.NativeObject               
} 

